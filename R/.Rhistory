equation <-
"f1 :=> .7*x1 + .6*x2
0.5*x3 + .6*x4 <=: f2
f3 :=> 0.7* x5 + .6*x6
f2 <= 0*f1
f3 <= 0*f1 + 0*f2
f1 + f2 +f3 <= 0*1
f1 + f2 <~ 0*x7 +  0*x8
f1<=>fix(1)*f1
f2<=>fix(1)*f2
f3<=>fix(1)*f3
x7 <=> 1* x7
x8 <=> 1* x8"
N <- 200
P <- 8
sample_data <-
rbind(data.frame(matrix(rnorm(N * P), N, P) %*% chol(sigma), group = "C1"),
data.frame(matrix(rnorm(N * P), N, P) %*% chol(sigma), group = "C2"))
colnames(sample_data) <- c(paste0("x", 1:8), "group")
#initialize via sample_data#
r6_lslx <- lslx$new(
equation = equation,
sample_data = sample_data,
group_variable = "group"
)
optimizer<-r6_lslx$fit(
penalty_function = "mcp",
lambda_grid = seq(0, .3, .01),
gamma_grid = c(3, 6, 9, Inf),
optimizer_control = list(
max_iter_in = 30,
max_iter_out = 100,
max_iter_armijo = 100,
tol_in = 1e-5,
tol_out = 1e-5,
step_size = .5,
cov_ridge = 1e-7,
hessian_ridge = 1e-7,
armijo = 1e-5
)
)
optimizer$beta
optimizer$theta_start
optimizer$update_parameter_matrice()
optimizer$beta
optimizer$update_parameter_matrice()
optimizer$alpha
rm(list=ls())
source('~/Desktop/lslx/ver.0.5/R/lslxModel.R')
source('~/Desktop/lslx/ver.0.5/R/lslxData.R')
source('~/Desktop/lslx/ver.0.5/R/lslxKnowledge.R')
source('~/Desktop/lslx/ver.0.5/R/lslxFitting.R')
source('~/Desktop/lslx/ver.0.5/R/lslxOptimizerMVN.R')
source('~/Desktop/lslx/ver.0.5/R/lslx.R')
source('~/Desktop/lslx/ver.0.5/R/lslx-fit.R')
beta_vf <- matrix(0, 8, 3)
beta_vf[1:2, 1] <-
beta_vf[3:4, 2] <-
beta_vf[5:6, 3] <- 0.7
beta_vv <- diag(0, 8)
beta_fv <- matrix(0, 3, 8)
beta_fv[1, 7] <-
beta_fv[1, 8] <-
beta_fv[2, 7] <-
beta_fv[2, 8] <- 0.2
beta_ff <- matrix(0, 3, 3)
beta_ff[3, 1] <-
beta_ff[3, 2] <- 0.5
beta_ff[2, 1] <- 0.3
beta <-
rbind(cbind(beta_vv, beta_vf),
cbind(beta_fv, beta_ff))
alpha <-
matrix(0, 11, 1)
phi <- diag(1, 11)
phi[7, 8] <-
phi[8, 7] <- 0.3
sigma <-
solve(diag(1, 11) - beta) %*% phi %*% t(solve(diag(1, 11) - beta))
sigma <- sigma[1:8, 1:8]
equation <-
"f1 :=> .7*x1 + .6*x2
0.5*x3 + .6*x4 <=: f2
f3 :=> 0.7* x5 + .6*x6
f2 <= 0*f1
f3 <= 0*f1 + 0*f2
f1 + f2 +f3 <= 0*1
f1 + f2 <~ 0*x7 +  0*x8
f1<=>fix(1)*f1
f2<=>fix(1)*f2
f3<=>fix(1)*f3
x7 <=> 1* x7
x8 <=> 1* x8"
N <- 200
P <- 8
sample_data <-
rbind(data.frame(matrix(rnorm(N * P), N, P) %*% chol(sigma), group = "C1"),
data.frame(matrix(rnorm(N * P), N, P) %*% chol(sigma), group = "C2"))
colnames(sample_data) <- c(paste0("x", 1:8), "group")
#initialize via sample_data#
r6_lslx <- lslx$new(
equation = equation,
sample_data = sample_data,
group_variable = "group"
)
optimizer<-r6_lslx$fit(
penalty_function = "mcp",
lambda_grid = seq(0, .3, .01),
gamma_grid = c(3, 6, 9, Inf),
optimizer_control = list(
max_iter_in = 30,
max_iter_out = 100,
max_iter_armijo = 100,
tol_in = 1e-5,
tol_out = 1e-5,
step_size = .5,
cov_ridge = 1e-7,
hessian_ridge = 1e-7,
armijo = 1e-5
)
)
source('~/Desktop/lslx/ver.0.8/R/lslxModel.R')
source('~/Desktop/lslx/ver.0.8/R/lslxData.R')
source('~/Desktop/lslx/ver.0.8/R/lslxFitting.R')
source('~/Desktop/lslx/ver.0.8/R/lslxKnowledge.R')
source('~/Desktop/lslx/ver.0.8/R/lslxOptimizer.R')
source('~/Desktop/lslx/ver.0.8/R/lslx.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-fit-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-plot-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-summarize-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-get-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-get-optimizer-method (test only).R')
source('~/Desktop/lslx/ver.0.8/R/lslx-extract-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-set-coefficient-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-test-method.R')
equation <-
'
visual  :=> x1 + x2 + x3
textual :=> x4 + x5 + x6
speed   :=> x7 + x8 + x9
visual  :~> x4 + x5 + x6 + x7 + x8 + x9
textual :~> x1 + x2 + x3 + x7 + x8 + x9
speed   :~> x1 + x2 + x3 + x4 + x5 + x6
visual <=> fix(1)* visual
textual <=> fix(1)* textual
speed <=> fix(1)* speed
'
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school")
r6_lslx$fit_mcp(lambda_grid = 0.1,
gamma_grid = 10)
fitting <- r6_lslx$get_fitting()
Rcpp::sourceCpp('lslxOptimizer.cpp')
replicate(100,fit(fitting$reduced_data, fitting$reduced_model, fitting$fitting_control))
replicate(100,fit(fitting$reduced_data, fitting$reduced_model, fitting$fitting_control))
a<-replicate(1000,fit(fitting$reduced_data, fitting$reduced_model, fitting$fitting_control))
object.size(a)
object.size(a, "MB")
Rcpp::sourceCpp('lslxOptimizer.cpp')
a
r6_lslx$extract_coefficient("bic")
r6_lslx$extract_coefficient("bic")[[1]]
r6_lslx$extract_coefficient("bic")[[1]] - a
sum(abs(r6_lslx$extract_coefficient("bic")[[1]] - a))
source('~/Desktop/lslx/ver.0.8/R/lslxModel.R')
source('~/Desktop/lslx/ver.0.8/R/lslxData.R')
source('~/Desktop/lslx/ver.0.8/R/lslxFitting.R')
source('~/Desktop/lslx/ver.0.8/R/lslxKnowledge.R')
source('~/Desktop/lslx/ver.0.8/R/lslxOptimizer.R')
source('~/Desktop/lslx/ver.0.8/R/lslx.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-fit-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-plot-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-summarize-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-get-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-get-optimizer-method (test only).R')
source('~/Desktop/lslx/ver.0.8/R/lslx-extract-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-set-coefficient-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-test-method.R')
equation <-
'
visual  :=> x1 + x2 + x3
textual :=> x4 + x5 + x6
speed   :=> x7 + x8 + x9
visual  :~> x4 + x5 + x6 + x7 + x8 + x9
textual :~> x1 + x2 + x3 + x7 + x8 + x9
speed   :~> x1 + x2 + x3 + x4 + x5 + x6
visual <=> fix(1)* visual
textual <=> fix(1)* textual
speed <=> fix(1)* speed
'
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_variable = "Pastuer")
r6_lslx$fit_mcp(lambda_grid = 0.1,
gamma_grid = 10)
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Pastuer")
r6_lslx$fit_mcp(lambda_grid = 0.1,
gamma_grid = 10)
fitting <- r6_lslx$get_fitting()
Rcpp::sourceCpp('lslxOptimizer.cpp')
a
sum(abs(r6_lslx$extract_coefficient("bic")[[1]] - a))
r6_lslx$extract_coefficient("bic")[[1]]
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Pasteur")
r6_lslx$fit_mcp(lambda_grid = 0.1,
gamma_grid = 10)
fitting <- r6_lslx$get_fitting()
Rcpp::sourceCpp('lslxOptimizer.cpp')
sum(abs(r6_lslx$extract_coefficient("bic")[[1]] - a))
a
r6_lslx$extract_coefficient("bic")[[1]]
replicate(100,fit(fitting$reduced_data, fitting$reduced_model, fitting$fitting_control))
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Past")
source('~/Desktop/lslx/ver.0.8/R/lslxModel.R')
source('~/Desktop/lslx/ver.0.8/R/lslxData.R')
source('~/Desktop/lslx/ver.0.8/R/lslxFitting.R')
source('~/Desktop/lslx/ver.0.8/R/lslxKnowledge.R')
source('~/Desktop/lslx/ver.0.8/R/lslxOptimizer.R')
source('~/Desktop/lslx/ver.0.8/R/lslx.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-fit-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-plot-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-summarize-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-get-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-get-optimizer-method (test only).R')
source('~/Desktop/lslx/ver.0.8/R/lslx-extract-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-set-coefficient-method.R')
source('~/Desktop/lslx/ver.0.8/R/lslx-test-method.R')
equation <-
'
visual  :=> x1 + x2 + x3
textual :=> x4 + x5 + x6
speed   :=> x7 + x8 + x9
visual  :~> x4 + x5 + x6 + x7 + x8 + x9
textual :~> x1 + x2 + x3 + x7 + x8 + x9
speed   :~> x1 + x2 + x3 + x4 + x5 + x6
visual <=> fix(1)* visual
textual <=> fix(1)* textual
speed <=> fix(1)* speed
'
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Grant-White")
r6_lslx$fit_mcp(lambda_grid = 0.1,
gamma_grid = 10)
fitting <- r6_lslx$get_fitting()
replicate(100,fit(fitting$reduced_data, fitting$reduced_model, fitting$fitting_control))
a <- fitting$reduced_model, fitting$fitting_control)
a <- fit(fitting$reduced_data, fitting$reduced_model, fitting$fitting_control)
sum(abs(r6_lslx$extract_coefficient("bic")[[1]] - a))
microbenchmark::microbenchmark(fit(fitting$reduced_data, fitting$reduced_model, fitting$fitting_control))
a
r6_lslx$extract_coefficient("bic")[[1]]
Rcpp::sourceCpp('test.cpp')
Rcpp::sourceCpp('test.cpp')
test1()
Rcpp::sourceCpp('test.cpp')
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
Rcpp::sourceCpp('test.cpp')
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
Rcpp::sourceCpp('test.cpp')
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(1000,test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
microbenchmark::microbenchmark(test1(),test2())
?microbenchmark::microbenchmark()
?microbenchmark::microbenchmark
microbenchmark::microbenchmark(test1(),test2(),times = 1000L)
fitting
fitting$reduced_model
Rcpp::sourceCpp('test1.cpp')
compute_coefficient_matrice_cpp1(
fitting$reduced_data,
fitting$reduced_model,
fitting$control)
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
fitting$reduced_data
Rcpp::sourceCpp('test2.cpp')
Rcpp::sourceCpp('test2.cpp')
compute_coefficient_matrice_cpp2(
fitting$reduced_data,
fitting$reduced_model,
fitting$control)
source('~/Desktop/lslx/ver.0.1.2/R/lslxModel.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslxData.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslxFitting.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx-set-coefficient-method.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx-get-method.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx-extract-method.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx-fit-method.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx-plot-method.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx-summarize-method.R')
source('~/Desktop/lslx/ver.0.1.2/R/lslx-test-method.R')
Rcpp::sourceCpp('~/Desktop/lslx/ver.0.1.2/R/lslxOptimizer.cpp')
equation <-
'
visual  :=> .8 * x1 + x2 + x3
textual :=> .7*x4 + x5 + x6
speed   :=> x7 + x8 + x9
visual  :~> x4 + x5 + x6 + x7 + x8 + x9
textual :~> x1 + x2 + x3 + x7 + x8 + x9
speed   :~> x1 + x2 + x3 + x4 + x5 + x6
visual <=> fix(1)* visual
textual <=> fix(1)* textual
speed <=> fix(1)* speed
'
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Pasteur")
r6_lslx$fit_mcp(lambda_grid = seq(.01, .3, .01),
gamma_grid = c(5, 10, Inf))
fitting <- r6_lslx$get_fitting()
compute_coefficient_matrice_cpp2(
fitting$reduced_data,
fitting$reduced_model,
fitting$control)
compute_coefficient_matrice_cpp1(
fitting$reduced_data,
fitting$reduced_model,
fitting$control)
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
test1()
test1()[1:5,1:5]
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
Rcpp::sourceCpp('test1.cpp')
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939)
r6_lslx$fit_mcp(lambda_grid = seq(.01, .3, .01),
gamma_grid = c(5, 10, Inf))
fitting <- r6_lslx$get_fitting()
Rcpp::sourceCpp('test1.cpp')
i = 10
duplication_i <- diag(i)
idx <- seq(i * (i + 1) / 2)
duplication_i[lower.tri(duplication_i,
diag = TRUE)] <-
idx
duplication_i[upper.tri(duplication_i)] <-
t(duplication_i)[upper.tri(duplication_i)]
duplication_i <-
outer(c(duplication_i),
idx,
function(x, y)
ifelse(x == y, 1, 0))
duplication_i
i = 3
commutation_i <- matrix(0, i * i, i * i)
idx_1 <- 1:(i * i)
idx_2 <- c(t(matrix(c(1:(
i * i
)), i, i)))
idx_3 <- idx_2 - 1
idx <- (i * i) * idx_3 + idx_1
commutation_i[idx] <- 1
commutation_i
commutation_i <- Matrix(0, i * i, i * i)
idx_1 <- 1:(i * i)
idx_2 <- c(t(matrix(c(1:(
i * i
)), i, i)))
idx_3 <- idx_2 - 1
idx <- (i * i) * idx_3 + idx_1
commutation_i[idx] <- 1
library(Matrix)
commutation_i <- Matrix(0, i * i, i * i)
idx_1 <- 1:(i * i)
idx_2 <- c(t(matrix(c(1:(
i * i
)), i, i)))
idx_3 <- idx_2 - 1
idx <- (i * i) * idx_3 + idx_1
commutation_i[idx] <- 1
commutation_i
commutation_i <- matrix(0, i * i, i * i)
idx_1 <- 1:(i * i)
idx_2 <- c(t(matrix(c(1:(
i * i
)), i, i)))
idx_3 <- idx_2 - 1
idx <- (i * i) * idx_3 + idx_1
commutation_i[idx] <- 1
commutation_i
duplication_i <- diag(i)
idx <- seq(i * (i + 1) / 2)
duplication_i[lower.tri(duplication_i,
diag = TRUE)] <-
idx
duplication_i[upper.tri(duplication_i)] <-
t(duplication_i)[upper.tri(duplication_i)]
duplication_i
outer(c(duplication_i),
idx,
function(x, y)
ifelse(x == y, 1, 0))
?outer
Matrix(duplication_i)
duplication_i <-
outer(c(duplication_i),
idx,
function(x, y)
ifelse(x == y, 1, 0))
Matrix(duplication_i)
Diag(1, 10)
Diagonal(1, 10)
Diagonal(10, 10)
?Diagonal
class(Diagonal(10, 10))
source('~/Desktop/lslx/ver.0.1.4/R/lslxModel.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslxData.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslxFitting.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-set-coefficient-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-get-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-extract-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-fit-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-plot-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-test-method.R')
Rcpp::sourceCpp('~/Desktop/lslx/ver.0.1.4/R/lslxOptimizer.cpp')
equation <-
'
visual  :=> .8 * x1 + x2 + x3
textual :=> .7*x4 + x5 + x6
speed   :=> x7 + x8 + x9
visual  :~> x4 + x5 + x6 + x7 + x8 + x9
textual :~> x1 + x2 + x3 + x7 + x8 + x9
speed   :~> x1 + x2 + x3 + x4 + x5 + x6
visual <=> fix(1)* visual
textual <=> fix(1)* textual
speed <=> fix(1)* speed
'
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Pasteur")
r6_lslx$fit_mcp(lambda_grid = seq(.01, .3, .01),
gamma_grid = c(5, 10, Inf))
source('~/Desktop/lslx/ver.0.1.4/R/lslxModel.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslxData.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslxFitting.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-set-coefficient-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-get-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-extract-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-fit-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-plot-method.R')
source('~/Desktop/lslx/ver.0.1.4/R/lslx-test-method.R')
Rcpp::sourceCpp('~/Desktop/lslx/ver.0.1.4/R/lslxOptimizer.cpp')
equation <-
'
visual  :=> .8 * x1 + x2 + x3
textual :=> .7*x4 + x5 + x6
speed   :=> x7 + x8 + x9
visual  :~> x4 + x5 + x6 + x7 + x8 + x9
textual :~> x1 + x2 + x3 + x7 + x8 + x9
speed   :~> x1 + x2 + x3 + x4 + x5 + x6
visual <=> fix(1)* visual
textual <=> fix(1)* textual
speed <=> fix(1)* speed
'
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Pasteur")
r6_lslx$fit_mcp(lambda_grid = seq(.01, .3, .01),
gamma_grid = c(5, 10, Inf))
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939)
r6_lslx$fit_mcp(lambda_grid = seq(.01, .3, .01),
gamma_grid = c(5, 10, Inf))
library(Matrix)
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939)
r6_lslx$fit_mcp(lambda_grid = seq(.01, .3, .01),
gamma_grid = c(5, 10, Inf))
r6_lslx <- lslx$new(equation = equation,
sample_data = lavaan::HolzingerSwineford1939,
group_variable = "school",
reference_group = "Pasteur")
r6_lslx$fit_mcp(lambda_grid = seq(.01, .3, .01),
gamma_grid = c(5, 10, Inf))
r6_lslx$test_coefficient("bic")
